name: AWS Provisioning

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Adjust this to your desired branch

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRV_KEY }}
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUB_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  SSH_KEY_NAME: "github-actions-key"
  Instance_IP: ""

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Output instance IP
        run: |
              $Instance_IP=$(terraform output -json instance_ip | jq -r .)
              echo "Instance IP: $Instance_IP"

      - name: Set up SSH agent
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ env.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
      
      - name: Add SSH public key to server
        run: |
          ssh-keyscan -H $Instance_IP >> ~/.ssh/known_hosts
          echo "${{ env.SSH_PUBLIC_KEY }}" | ssh ubuntu@$Instance_IP "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"
       
      - name: Verify connection
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@$Instance_IP "echo 'Connection successful!'"
