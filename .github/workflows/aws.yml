name: AWS Provisioning

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Adjust this to your desired branch

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRV_KEY }}
  SSH_PUBLIC_KEY: ${{ vars.SSH_PUB_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  SSH_KEY_NAME: "github-actions-key"
  Instance_IP: ""

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform process
        env:
          TF_VAR_aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_region: ${{ env.AWS_REGION }}
          TF_VAR_ssh_public_key: "${{ env.SSH_PUBLIC_KEY }}"
        run: |
            terraform init
            terraform validate
            terraform apply -auto-approve

      - name: Output instance IP
        run: |
              export Instance_IP=$(terraform output -json instance_ip | jq -r .)
              echo "Instance IP: $Instance_IP"

      - name: Set up SSH agent
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ env.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
      
      - name: Add SSH public key to server
        run: |
          mkdir -p ~/.ssh
          echo "Instance IP: $Instance_IP"
        # ssh-keyscan $Instance_IP > ~/.ssh/known_hosts
        # echo "${{ env.SSH_PUBLIC_KEY }}" | ssh ubuntu@$Instance_IP  && cat > ~/.ssh/authorized_keys"
       
      # - name: Verify connection
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ubuntu@$Instance_IP "echo 'Connection successful!'"
